buildscript {

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
        classpath("org.springframework:springloaded:1.2.6.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group = 'sanintel3'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

bootRun {
    //jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=y', '-Dspring.config.location=/var/app/srcs/conf/']
    jvmArgs = ['-Dspring.config.location=/var/app/srcs/conf/']
}

jar {
    baseName = 'srcs'
    version =  '0.1.0'
}

springBoot {
    mainClass = "com.srcs.bootstrap.BootStrap"
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("javax.mail:javax.mail-api:1.5.5")
    compile("org.springframework.boot:spring-boot-devtools")
    compile 'com.sun.mail:javax.mail:1.5.5'
    compile 'org.apache.poi:poi:3.14'
    compile 'org.apache.poi:poi-ooxml:3.14'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.springframework:spring-context-support:4.2.7.RELEASE'
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
